/**
 * Celestibytes Game Engine
 * CTIEngine
 *
 * Master build file
 *
 * @author PizzAna
 */
 buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath group: 'io.github.celestibytes', name: 'CelestiGradle', version: '3.3-SNAPSHOT', changing: true
    }
    configurations.all {
    	resolutionStrategy.cacheChangingModulesFor 60, 'seconds'
	}
}

apply plugin: 'signing'

import static celestibytes.gradle.CelestiGradlePlugin.*

version = versionNumber('0.1-SNAPSHOT')
basePackage('celestibytes.engine') // TODO Come up with better package name
artifactsList(['javadoc', 'sources'])
depsFile()

apply plugin: 'celestibytes'

group 'io.github.celestibytes'
archivesBaseName = project.getName()

signing {
    required {gradle.taskGraph.hasTask("release")}
    sign configurations.archives
}

uploadArchives {
    repositories {
        if (project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword"))
        {
            mavenDeployer {
                beforeDeployment {MavenDeployment deployment -> signing.signPom(deployment)}

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom {
                    groupId = project.group
                    version = project.version
                    artifactId = project.archivesBaseName
                }

                pom.project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'Celestibytes Game Engine.'
                    url 'https://github.com/Celestibytes/CTIEngine'

                    scm {
                        url 'https://github.com/Celestibytes/CTIEngine'
                        connection 'scm:git:git://github.com/Celestibytes/CTIEngine.git'
                        developerConnection 'scm:git:git@github.com:Celestibytes/CTIEngine.git'
                    }

                    issueManagement {
                        system 'github'
                        url 'https://github.com/Celestibytes/CTIEngine/issues'
                    }

					licenses {
                        license {
                            name 'GNU GENERAL PUBLIC LICENSE v2'
                            url 'http://www.gnu.org/licenses/gpl-2.0.html'
                        }
                    }
                    
                    developers {
                        developer {
                            id 'pizzana'
                            name 'PizzAna'
                            roles {role 'developer'}
                        }
						developer {
							id 'okkapel'
							name 'Okkapel'
							roles {role 'developer'}
						}
                    }
                }
            }
        }
        else
        {
            add project.repositories.mavenLocal()
            logger.info('Publishing to repo folder')

            mavenDeployer {
                repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
            }
        }
    }
}
